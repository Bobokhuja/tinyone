@mixin clearfix() {
  &::before,
  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

@mixin min-max($min-width, $max-width, $padding) {
  box-sizing: border-box;
  min-width: $min-width;
  max-width: $max-width;
  padding: 0 $padding;
  margin: 0 auto;
}

@mixin adaptive-video() {
  position: relative;
  height: 0;
  padding-top: 30px;
  padding-bottom: 56.25%; /* задаёт высоту контейнера для 16:9 (если 4:3 — поставьте 75%) */
  overflow: hidden;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin visually-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(100%);
  white-space: nowrap;
  border: 0;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin font-include($font-name, $font-style: normal, $font-weight: 400, $woff, $woff2) {

  @font-face {
    font-family: $font-name;
    font-style: $font-style;
    font-weight: $font-weight;
    src: url($woff2) format("woff2"), url($woff) format("woff");
    font-display: swap;
  }
}

@mixin button($width: auto, $height: auto, $bg, $fz, $lh, $border, $br, $color) {
  display: inline-block;
  width: $width;
  height: $height;
  font-size: $fz;
  line-height: $lh;
  color: $color;
  text-align: center;
  background: $bg;
  border: $border;
  border-radius: $br;
}
